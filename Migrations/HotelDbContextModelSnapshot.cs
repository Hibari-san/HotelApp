// <auto-generated />
using System;
using HotelReservationAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    partial class HotelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelReservationAPI.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("HotelReservationAPI.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("HasBreakfast")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDoubleBed")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 1,
                            HasBreakfast = true,
                            IsDoubleBed = false,
                            Type = "Single"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 1,
                            HasBreakfast = false,
                            IsDoubleBed = false,
                            Type = "Single"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 2,
                            HasBreakfast = true,
                            IsDoubleBed = true,
                            Type = "Double"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 2,
                            HasBreakfast = false,
                            IsDoubleBed = true,
                            Type = "Double"
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 4,
                            HasBreakfast = true,
                            IsDoubleBed = false,
                            Type = "Quad"
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 4,
                            HasBreakfast = false,
                            IsDoubleBed = true,
                            Type = "Quad"
                        });
                });

            modelBuilder.Entity("HotelReservationAPI.Models.Reservation", b =>
                {
                    b.HasOne("HotelReservationAPI.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });
#pragma warning restore 612, 618
        }
    }
}
